name: Deploy

on:
  push:
    branches: [ master ]

jobs:
  upload_image:
    runs-on: ubuntu-latest
    outputs:
      image_url: ${{ steps.pubish_image.outputs.image_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Publish Image
        id: pubish_image
        uses: ripplr-io/docr-docker-publish@fix/all-tags-argument
        with:
          image_path: ripplr/ripplr-api

      - name: Remove Old Images
        uses: ripplr-io/docr-image-remove@v1
        with:
          image_repository: ripplr-api

  run_migrations:
    runs-on: ubuntu-latest
    needs: upload_image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ripplr

      - name: Run migration
        run: kubectl create -f kube/jobs/migrate.yml

      - name: Wait for job status
        run: kubectl wait --for=condition=complete job/migrate

      - name: Delete older migration jobs
        run: kubectl delete job migrate

  deploy:
    runs-on: ubuntu-latest
    needs:
      - upload_image
      - run_migrations
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ripplr

      - name: Deploy
        run: |
          kubectl set image deployment/ripplr-api ripplr-api=${{ needs.upload_image.outputs.image_url }}
          kubectl set image deployment/sidekiq sidekiq=${{ needs.upload_image.outputs.image_url }}
          kubectl set image deployment/terminal terminal=${{ needs.upload_image.outputs.image_url }}

      - name: Verify deployment
        run: kubectl rollout status deployment/ripplr-api

  slack_notifications_success:
    if: success()
    runs-on: ubuntu-latest
    needs:
      - upload_image
      - run_migrations
      - deploy
    steps:
      - name: Send slack notifications
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{secrets.SLACK_DEPLOY_WEBHOOK}}
          name: 'API Deployed!'
          icon_emoji: ':rocket:'

  slack_notifications_failure:
    if: failure()
    runs-on: ubuntu-latest
    needs:
      - upload_image
      - run_migrations
      - deploy
    steps:
      - name: Send slack notifications
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{secrets.SLACK_DEPLOY_WEBHOOK}}
          name: 'API Deployment Failed!'
          icon_emoji: ':collision:'
