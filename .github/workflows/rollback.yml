name: Deploy

on:
  workflow_dispatch:
    inputs:
      sha8:
        description: 'Sha8 (optional)'
        required: false

jobs:
  rollback:
    runs-on: ubuntu-latest
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        run: doctl kubernetes cluster kubeconfig save ripplr

      - name: Rollback
        if: "github.event.inputs.sha8"
        run: |
          kubectl set image deployment/ripplr-api ripplr-api=${IMAGE_URL}:${{ github.event.inputs.sha8 }}
          kubectl set image deployment/sidekiq sidekiq=${IMAGE_URL}:${{ github.event.inputs.sha8 }}
          kubectl set image deployment/terminal terminal=${IMAGE_URL}:${{ github.event.inputs.sha8 }}

      - name: Rollback
        if: "!github.event.inputs.sha8"
        run: |
          kubectl rollout undo deployment/ripplr-api
          kubectl rollout undo deployment/sidekiq
          kubectl rollout undo deployment/terminal

      - name: Verify deployment
        run: kubectl rollout status deployment/ripplr-api

  slack-notifications-success:
    if: success()
    runs-on: ubuntu-latest
    needs:
      - rollback
    steps:
      - name: Send slack notifications
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{secrets.SLACK_DEPLOY_WEBHOOK}}
          name: 'API Rollback!'
          icon_emoji: ':rewind:'

  slack-notifications-failure:
    if: failure()
    runs-on: ubuntu-latest
    needs:
      - rollback
    steps:
      - name: Send slack notifications
        uses: Gamesight/slack-workflow-status@master
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{secrets.SLACK_DEPLOY_WEBHOOK}}
          name: 'API Rollback Failed!'
          icon_emoji: ':rewind:'
